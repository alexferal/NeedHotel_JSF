<ui:composition xmlns="http://www.w3.org/1999/xhtml"
                xmlns:h="http://xmlns.jcp.org/jsf/html"
                xmlns:ui="http://xmlns.jcp.org/jsf/facelets"
                xmlns:f="http://xmlns.jcp.org/jsf/core"
                xmlns:p="http://primefaces.org/ui"
                template="../WEB-INF/layout.xhtml">
    <ui:define name="principal">
        <div  class="container white row" style="margin-top: 15px; padding: 15px; border-radius: 15px;">
            <div class="col s12">
                <h3><h:outputText id="nomeImovel" value="#{imovelBean.imovel.nome}"/> </h3>
                <p:separator/>
            </div>
            <div class="col s7">
                <div id="descricaoImovel">
                    <h4><i class="material-icons">assignment</i>Descrição</h4>
                    <p:separator/>
                    <h:outputText value="#{imovelBean.imovel.descricao}"/>
                </div>
                <div id="comodosImovel">
                    <h4><i class="material-icons">dns</i>Comodidades</h4>
                    <p:separator/>
                    <ul class="collection">
                        <p:repeat value="#{imovelBean.imovel.comodidades}" var="comodidade">
                            <li class="collection-item"><h:outputText value="#{comodidade}"/></li>
                        </p:repeat>
                    </ul>
                </div>
            </div>
            <div class="col s5">
                <div id="imagemImovel" class="col s12">
                    <div class="col s12">
                        <h4><i class="material-icons">collections</i>Fotos </h4>
                        <p:separator/>
                    </div>
                </div>

            </div>
            <div id="localizacaoImovel" class="col s12">
                <h4><i class="material-icons">location_on</i>Localização</h4>
                <p:separator/>
                <h:outputStylesheet>
                    #map {
                        height: 100%;
                    }
                    html, body {
                        height: 100%;
                        margin: 0;
                        padding: 0;
                    }
                    .popup-bubble {
                        position: absolute;
                        top: 0;
                        left: 0;
                        transform: translate(-50%, -100%);
                        background-color: white;
                        padding: 5px;
                        border-radius: 5px;
                        font-family: sans-serif;
                        overflow-y: auto;
                        max-height: 60px;
                        box-shadow: 0px 2px 10px 1px rgba(0,0,0,0.5);
                    }
                    .popup-bubble-anchor {
                        /* Position the div a fixed distance above the tip. */
                        position: absolute;
                        width: 100%;
                        bottom: /* TIP_HEIGHT= */ 8px;
                        left: 0;
                    }
                    .popup-bubble-anchor::after {
                        content: "";
                        position: absolute;
                        top: 0;
                        left: 0;
                        transform: translate(-50%, 0);
                        width: 0;
                        height: 0;
                        /* The tip is 8px high, and 12px wide. */
                        border-left: 6px solid transparent;
                        border-right: 6px solid transparent;
                        border-top: /* TIP_HEIGHT= */ 8px solid white;
                    }
                    .popup-container {
                        cursor: auto;
                        height: 0;
                        position: absolute;
                        width: 200px;
                    }
                </h:outputStylesheet>

                <div id="map" class="col s12" style="height: 300px;"></div>
                <div id="content"><h:outputText value="#{imovelBean.imovel.nome}"/></div>
                <h:outputText id="coordenada" value="#{imovelBean.lngLat}"/>
                <script>
                    var popup, Popup;
                    function initMap() {
                        var ll = document.getElementById("coordenada").innerHTML;
                        var coordenadas = ll.split(",");
                        var latitude = Number(coordenadas[0]);
                        var longitude = Number(coordenadas[1]);

                        var myLatLng = new google.maps.LatLng(latitude, longitude);

                        var map = new google.maps.Map(document.getElementById('map'), {
                            zoom: 18,
                            center: myLatLng,
                            mapTypeId: google.maps.MapTypeId.SATELLITE,
                            mapZoomControl: false,
                            zoomControl: false,
                            disableDefaultUI: true
                        });

                        var marker = new google.maps.Marker({
                            position: myLatLng,
                            map: map,
                            title: 'Imovel'
                        });
                        Popup = createPopupClass();
                        popup = new Popup(
                            new google.maps.LatLng(latitude+0.00025, longitude),
                            document.getElementById('content'));
                        popup.setMap(map);
                    }

                    /**
                     * Returns the Popup class.
                     *
                     * Unfortunately, the Popup class can only be defined after
                     * google.maps.OverlayView is defined, when the Maps API is loaded.
                     * This function should be called by initMap.
                     */
                    function createPopupClass() {
                        /**
                         * A customized popup on the map.
                         * @param {!google.maps.LatLng} position
                         * @param {!Element} content The bubble div.
                         * @constructor
                         * @extends {google.maps.OverlayView}
                         */
                        function Popup(position, content) {
                            this.position = position;

                            content.classList.add('popup-bubble');

                            // This zero-height div is positioned at the bottom of the bubble.
                            var bubbleAnchor = document.createElement('div');
                            bubbleAnchor.classList.add('popup-bubble-anchor');
                            bubbleAnchor.appendChild(content);

                            // This zero-height div is positioned at the bottom of the tip.
                            this.containerDiv = document.createElement('div');
                            this.containerDiv.classList.add('popup-container');
                            this.containerDiv.appendChild(bubbleAnchor);

                            // Optionally stop clicks, etc., from bubbling up to the map.
                            google.maps.OverlayView.preventMapHitsAndGesturesFrom(this.containerDiv);
                        }
                        // ES5 magic to extend google.maps.OverlayView.
                        Popup.prototype = Object.create(google.maps.OverlayView.prototype);

                        /** Called when the popup is added to the map. */
                        Popup.prototype.onAdd = function() {
                            this.getPanes().floatPane.appendChild(this.containerDiv);
                        };

                        /** Called when the popup is removed from the map. */
                        Popup.prototype.onRemove = function() {
                            if (this.containerDiv.parentElement) {
                                this.containerDiv.parentElement.removeChild(this.containerDiv);
                            }
                        };

                        /** Called each frame when the popup needs to draw itself. */
                        Popup.prototype.draw = function() {
                            var divPosition = this.getProjection().fromLatLngToDivPixel(this.position);

                            // Hide the popup when it is far out of view.
                            var display =
                                Math.abs(divPosition.x) &lt; 4000 &amp;&amp; Math.abs(divPosition.y) &lt; 4000 ?
                                    'block' :
                                    'none';

                            if (display === 'block') {
                                this.containerDiv.style.left = divPosition.x + 'px';
                                this.containerDiv.style.top = divPosition.y + 'px';
                            }
                            if (this.containerDiv.style.display !== display) {
                                this.containerDiv.style.display = display;
                            }
                        };

                        return Popup;
                    }
                </script>
                <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBRJstL5pnyV6jNM9YQd7_kZqe_G_Q67nQ&amp;callback=initMap"></script>

            </div>
        </div>
    </ui:define>

</ui:composition>
